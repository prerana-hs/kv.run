name: Build and push kv.run docker image

on:
  workflow_dispatch:

jobs:
  build-and-push-image:
    runs-on: [self-hosted, Linux, X64]

    concurrency:
      group: ${{ github.workflow }}-build-and-push-image-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true

    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0
        with:
          install: true
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4.4.1
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          flavor: |
            latest=auto
          images: |
            ghcr.io/${{env.GITHUB_REPOSITORY}}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,value=sha-${{ env.GITHUB_SHA_SHORT }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile_kvrun
          push: true
          platforms: 'linux/amd64'
          build-args: |
            GIT_SHA=${{ env.GITHUB_SHA }}
            DOCKER_LABEL=sha-${{ env.GITHUB_SHA_SHORT }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          #cache-from: type=gha
          #cache-to: type=gha,mode=max

#  integration-tests:
#    runs-on: [self-hosted, Linux, X64]
#
#    concurrency:
#      group: ${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.run_id }}
#      cancel-in-progress: true
#
#    needs:
#      - build-and-push-image # Wait for the docker image to be built
#
#    env:
#      DOCKER_VOLUME: /cache
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Inject slug/short variables
#        uses: rlespinasse/github-slug-action@v4.4.1
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.10.14
#      - name: Prepare disks
#        run: |
#          sudo mkfs -t ext4 /dev/nvme1n1
#          sudo mkdir ${{ env.DOCKER_VOLUME }}
#          sudo mount /dev/nvme1n1 ${{ env.DOCKER_VOLUME }}
#      - name: Install
#        run: |
#          make install-integration-tests
#      - name: Run tests
#        run: |
#          export DOCKER_IMAGE=registry.internal.huggingface.tech/api-inference/community/text-generation-inference:sha-${{ env.GITHUB_SHA_SHORT }}
#          export HUGGING_FACE_HUB_TOKEN=${{ secrets.HUGGING_FACE_HUB_TOKEN }}
#          pytest -s -vv integration-tests
